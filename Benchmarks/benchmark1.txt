benchmark1




Create a project Benchmarks in PyCharm
Create a file named benchmark1.py
Be sure to include comments detailing each block of code as a part of your submitted program
Stuck on a particular topic? Brush up your skills with practice problems [link, solutions included] in a sandbox or Repl.it (link)


Complete the following:


# Part 1: Variables & Expressions
# (1)        Create a variable first_name and supply it with a string value
#         Create a variable last_name and supply it with a string value
#         Create a variable full_name which concatenates the previous two 
#         variables and a space
#        print(full_name)
#        Example Output:
#        >>> Mr Watson


# (2)        Create a variable num1 and supply it with an integer value
#        Create a variable num2 and supply it with an integer value
#        Create a variable num3 and supply it with the product of num1 and 
#         num2
#        print(num3)
#        Example Output:
#        >>> 50


# (3)        Create a variable remainder and supply it with the remainder of 
#        any even integer divided by 2
#        print(remainder)
#        Expected Output:
#        >>> 0


# (4)        Create a variable random_int and supply it with a random integer 
#        from 0-10 (inclusive) using the Python randint() method
#        print(random_int)
#        Example Output:
#        >>> 6


# Part 2: Control Structures (Control Flow)
# (5)        Create a series of control structures that will compare variables 
#        num4 and num5, (create and provide integer values of your choice) 
#         and provide print statements that display whether num4 or num5 is 
#         larger, or that they are equal. 
#        Example Output:
#        >>> num4 is greater than num5


# (6)        Create a series of control structures that will compare variables 
#        str1 and str2, (create and provide string values of your choice) 
#         and provide print statements that display whether str2 or str2 is 
#         longer in length, or that they are of equal length.
#        Example Output:
#        >>> str1 and str2 are the same length


# (7)        Create a for loop that prints numbers 0 - 10 (including 10)
#        Expected Output:
#        >>> 0
#        >>> 1
#        >>> 2
#        >>> 3
#        >>> 4
#        >>> 5
#        >>> 6
#        >>> 7
#        >>> 8
#        >>> 9
#        >>> 10


# (8)        Create a for loop that prints all the even numbers from 0 - 10 
#        (including 10)
#        Expected Output:
#        >>> 0
#        >>> 2
#        >>> 4
#        >>> 6
#        >>> 8
#        >>> 10


________________


# (9)        Create a for loop that prints the phrase “Computer Science” five 
#        times
#        Expected Output:
#        >>> Computer Science
#        >>> Computer Science
#        >>> Computer Science
#        >>> Computer Science
#        >>> Computer Science


# (10) Create a while loop that takes a user input, and prints exactly 
#        what the user typed in.
#        The loop shall terminate when the user enters the letter ‘Q’
#        Example Output:
#        >>> Enter an input, or Q to quit: input
#        >>> input
#        >>> Enter an input, or Q to quit: computer
#        >>> computer
#        >>> Enter an input, or Q to quit: science
#        >>> science
#        >>> Enter an input, or Q to quit: Q
#        >>> 
#        >>> Process finished with exit code 0


# (11) Create a code block that prompts a user for a password 
#        (of your choice), and continuously prints “DENIED” if the 
#         password entered is incorrect. Once the password is entered 
#        properly, print “Congrats!”, ending the code block
#        Example Output:
#        >>>Enter the correct password: pa
#        >>>DENIED
#        >>>Enter the correct password: pass
#        >>>DENIED
#        >>>Enter the correct password: password
#        >>>Congrats!
#        >>> 
#        >>> Process finished with exit code 0


________________


# Part 3: Functions
# (12) Create a function say_hello() that prints the string “Hello!”
#        Execute the function
#        Expected Output:
#        >>>Hello!


# (13) Create a function print_me() that takes in one parameter and 
#        prints that parameter.
#        Execute the function
#        Example Output:
#        >>>TEXT


# (14) Create a function say_hello_to() that takes in one parameter 
#        and concatenates the parameter to the end of the phrase “Hello”, 
#        such that it will ‘Say Hello’ to the argument upon execution
#        Execute the function
#        Example Output:
#        >>>Hello Mr Watson!


# (15) Create a function print_five() that prints the integer 5
#        Execute the function
#        Expected Output:
#        >>>5


# (16) Create a function add_ten() that takes in one parameter and 
#        adds ten to it. This function shall print the result of said 
#        operation
#        Execute the function
#        Example Output:
#        >>>20


# (17) Create a function max_num() that takes in two integer 
#        parameters and returns the largest of the two. If the integers 
#        are the same, it returns a string message stating that the 
#        integers are the same
#        Create a variable store_max_num, and execute the function to set 
#        its value
#        print(store_max_num)
#        Execute the function
#        Example Output:
#        >>>10




# (18) Create a function longest_string() that takes in two string 
#        parameters and returns the largest of the two. If the strings 
#        are the same, it returns a string message stating that they are 
#        the same
#        Create a variable store_longest_string, and execute the function 
#        to set its value
#        print(store_longest_string)
#        Execute the function
#        Example Output:
#        >>>longer




# (19) Create a variable global_num, and provide it an integer value 
#        of  10
#        Create a function increase_global_num() that will increase 
#        global_num by 1, and print its current value
#        Execute the function
#        Expected Output:
#        >>>11


# Part 4: Data Structures
# (20) Create a list string_list consisting of three strings of your 
#        choice
#        Create a block of code that will add an item to the end of the 
#        list, supplied by user input
#        print(string_list)
#        Example Output:
#        >>>['Computer', 'Monitor', 'Mouse']


# (21) Create an empty list int_list
#        Create a block of code that will add five random numbers to 
#        int_list using a control structure
#        print(int_list)
#        Example Output:
#        >>>[7, 0, 9, 7, 0]




________________


# User for 22 & 23


bank_users = {
   0: {'name': 'Mr Watson', 'pin': '1234', 'balance': 500},
   1: {'name': 'Mr Melone', 'pin': '4567', 'balance': 600},
   2: {'name': 'Mrs Murphy', 'pin': '7890', 'balance': 700},
}


# (22) Create a function display_balance() that takes in a bank users 
#        name and pin number.  This function shall display the current 
#        balance of the user passed as argument under the following 
#        conditions:
#                 The user exists in the bank_users dictionary
#                The pin passed as an argument is associated with the name 
#                passed as an argument
#        Example Output:
#        >>>Your current balance is: $500


# (23) Create a function withdraw() that takes in a bank users 
#        name, pin number and an amount to withdraw.  This function shall 
#         reduce the users balance by the amount passed as an argument 
#         under the following conditions:
#                 The user exists in the bank_users dictionary
#                The pin passed as an argument is associated with the name 
#                passed as an argument
#                The user has a balance that exceeds the amount passed as an 
#                argument to be withdrawn
#        Execute display_balance() afterwards to the same user ensure the 
#        withdraw method works as expected
#        Example Output:
#        >>>Withdrawal accepted! (-$200)
#        >>>Your current balance is: $300